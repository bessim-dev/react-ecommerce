{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\Github shit\\\\react-ecommerce\\\\client\\\\src\\\\Component\\\\Search\\\\Search.UI.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from \"react\";\nimport { AnimateSharedLayout, AnimatePresence } from \"framer-motion\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { selectCollectionForPreview, selectCollectionNamesForSearch } from \"../Redux/shop/shopSelector\";\nimport { fetchCollectionStart } from \"../Redux/shop/shopActions\";\nimport { SearchContainer, SearchButtonContainer, SearchInputContainer, SearchIcon, SearchDropdown, SearchDropdownRow } from \"./Search.style\";\nimport OutsideClickEvent from \"../OutsideClickEvent/OutsideClickEvent\";\nimport { useHistory } from \"react-router-dom\";\nconst searchInputVariants = {\n  initial: {\n    width: \"0\",\n    display: \"none\"\n  },\n  final: {\n    width: \"200px\",\n    display: \"block\"\n  },\n  transition: {}\n};\n\nconst findFirst = (query, array) => {\n  let arr = [];\n  return array.forEach(({\n    itemsName,\n    routeName\n  }) => {\n    for (let i = 0; i < itemsName.length; i++) {\n      if (itemsName[i] === query) {\n        const obj = {\n          id: i,\n          routeName: routeName\n        };\n        console.log(obj);\n        return obj;\n      }\n    }\n  });\n};\n\nconst SearchUI = ({\n  fetchCollectionStart,\n  data,\n  SHOP_DATA\n}) => {\n  _s();\n\n  let history = useHistory();\n  const [clicked, setClicked] = useState(false);\n  const [suggestions, setSuggestions] = useState([]);\n  const [inputValue, setInputValue] = useState(\"\");\n  const ref = useRef();\n  OutsideClickEvent(ref, () => setClicked(false)); //fetchData\n\n  if (clicked && !data.length) {\n    fetchCollectionStart();\n  }\n\n  const search = (query, array) => {\n    let finalList = [];\n    let filteredList = [];\n\n    if (query) {\n      array.forEach(({\n        itemsName\n      }) => {\n        filteredList = itemsName.filter(e => e.toLowerCase().indexOf(query.toLowerCase()) !== -1);\n\n        if (filteredList.length > 0) {\n          finalList.push(filteredList);\n        }\n      });\n      return finalList.flat().slice(0, 10);\n    } else {\n      return [];\n    }\n  };\n\n  const hundleClickSugg = value => {\n    setInputValue(value);\n    setSuggestions([]);\n    console.log(findFirst(value, data));\n  };\n\n  const onTextChange = e => {\n    const value = e.target.value;\n\n    if (data.length > 0) {\n      setSuggestions(search(value, data));\n      setInputValue(value);\n    } else {\n      fetchCollectionStart();\n    }\n  };\n\n  const renderSuggestionsList = () => {\n    if (suggestions.length > 0) {\n      return /*#__PURE__*/_jsxDEV(AnimateSharedLayout, {\n        children: /*#__PURE__*/_jsxDEV(AnimatePresence, {\n          children: clicked && /*#__PURE__*/_jsxDEV(SearchDropdown, {\n            layout: true,\n            initial: {\n              opacity: 0\n            },\n            animate: {\n              opacity: 1\n            },\n            exit: {\n              opacity: 0\n            },\n            children: [suggestions.map(suggestion => /*#__PURE__*/_jsxDEV(SearchDropdownRow, {\n              onClick: () => hundleClickSugg(suggestion),\n              children: suggestion\n            }, suggestion, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 19\n            }, this)), /*#__PURE__*/_jsxDEV(SearchDropdownRow, {\n              onClick: () => history.push(\"/shop\"),\n              children: \"...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this);\n    }\n\n    return null;\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(SearchContainer, {\n      ref: ref,\n      children: [/*#__PURE__*/_jsxDEV(SearchInputContainer, {\n        onChange: e => onTextChange(e),\n        placeholder: \"Search...\",\n        value: inputValue,\n        variants: searchInputVariants,\n        initial: clicked ? \"final\" : \"initial\",\n        animate: clicked ? \"final\" : \"initial\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SearchButtonContainer, {\n        onClick: () => setClicked(!clicked),\n        children: /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), renderSuggestionsList()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(SearchUI, \"MyMbsqPQLFBJcIO8VMP5RoeisaE=\", false, function () {\n  return [useHistory];\n});\n\n_c = SearchUI;\nconst mapStateToProps = createStructuredSelector({\n  SHOP_DATA: selectCollectionForPreview,\n  data: selectCollectionNamesForSearch\n});\n\nconst dispatchStateToProps = dispatch => ({\n  fetchCollectionStart: () => dispatch(fetchCollectionStart())\n});\n\nexport default connect(mapStateToProps, dispatchStateToProps)(SearchUI);\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchUI\");","map":{"version":3,"sources":["D:/Github shit/react-ecommerce/client/src/Component/Search/Search.UI.js"],"names":["React","useRef","useState","AnimateSharedLayout","AnimatePresence","connect","createStructuredSelector","selectCollectionForPreview","selectCollectionNamesForSearch","fetchCollectionStart","SearchContainer","SearchButtonContainer","SearchInputContainer","SearchIcon","SearchDropdown","SearchDropdownRow","OutsideClickEvent","useHistory","searchInputVariants","initial","width","display","final","transition","findFirst","query","array","arr","forEach","itemsName","routeName","i","length","obj","id","console","log","SearchUI","data","SHOP_DATA","history","clicked","setClicked","suggestions","setSuggestions","inputValue","setInputValue","ref","search","finalList","filteredList","filter","e","toLowerCase","indexOf","push","flat","slice","hundleClickSugg","value","onTextChange","target","renderSuggestionsList","opacity","map","suggestion","mapStateToProps","dispatchStateToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from \"react\";\r\nimport { AnimateSharedLayout, AnimatePresence } from \"framer-motion\";\r\nimport { connect } from \"react-redux\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport {\r\n  selectCollectionForPreview,\r\n  selectCollectionNamesForSearch,\r\n} from \"../Redux/shop/shopSelector\";\r\nimport { fetchCollectionStart } from \"../Redux/shop/shopActions\";\r\nimport {\r\n  SearchContainer,\r\n  SearchButtonContainer,\r\n  SearchInputContainer,\r\n  SearchIcon,\r\n  SearchDropdown,\r\n  SearchDropdownRow,\r\n} from \"./Search.style\";\r\nimport OutsideClickEvent from \"../OutsideClickEvent/OutsideClickEvent\";\r\nimport { useHistory } from \"react-router-dom\";\r\nconst searchInputVariants = {\r\n  initial: { width: \"0\", display: \"none\" },\r\n  final: { width: \"200px\", display: \"block\" },\r\n  transition: {},\r\n};\r\nconst findFirst = (query, array) => {\r\n  let arr = [];\r\n  return array.forEach(({ itemsName, routeName }) => {\r\n    for (let i = 0; i < itemsName.length; i++) {\r\n      if (itemsName[i] === query) {\r\n        const obj = { id: i, routeName: routeName };\r\n        console.log(obj);\r\n        return obj;\r\n      }\r\n    }\r\n  });\r\n};\r\nconst SearchUI = ({ fetchCollectionStart, data, SHOP_DATA }) => {\r\n  let history = useHistory();\r\n  const [clicked, setClicked] = useState(false);\r\n  const [suggestions, setSuggestions] = useState([]);\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const ref = useRef();\r\n  OutsideClickEvent(ref, () => setClicked(false));\r\n  //fetchData\r\n  if (clicked && !data.length) {\r\n    fetchCollectionStart();\r\n  }\r\n  const search = (query, array) => {\r\n    let finalList = [];\r\n    let filteredList = [];\r\n    if (query) {\r\n      array.forEach(({ itemsName }) => {\r\n        filteredList = itemsName.filter(\r\n          (e) => e.toLowerCase().indexOf(query.toLowerCase()) !== -1\r\n        );\r\n\r\n        if (filteredList.length > 0) {\r\n          finalList.push(filteredList);\r\n        }\r\n      });\r\n      return finalList.flat().slice(0, 10);\r\n    } else {\r\n      return [];\r\n    }\r\n  };\r\n\r\n  const hundleClickSugg = (value) => {\r\n    setInputValue(value);\r\n    setSuggestions([]);\r\n    console.log(findFirst(value, data));\r\n  };\r\n  const onTextChange = (e) => {\r\n    const value = e.target.value;\r\n    if (data.length > 0) {\r\n      setSuggestions(search(value, data));\r\n      setInputValue(value);\r\n    } else {\r\n      fetchCollectionStart();\r\n    }\r\n  };\r\n  const renderSuggestionsList = () => {\r\n    if (suggestions.length > 0) {\r\n      return (\r\n        <AnimateSharedLayout>\r\n          <AnimatePresence>\r\n            {clicked && (\r\n              <SearchDropdown\r\n                layout\r\n                initial={{ opacity: 0 }}\r\n                animate={{ opacity: 1 }}\r\n                exit={{ opacity: 0 }}\r\n              >\r\n                {suggestions.map((suggestion) => (\r\n                  <SearchDropdownRow\r\n                    key={suggestion}\r\n                    onClick={() => hundleClickSugg(suggestion)}\r\n                  >\r\n                    {suggestion}\r\n                  </SearchDropdownRow>\r\n                ))}\r\n                <SearchDropdownRow onClick={() => history.push(\"/shop\")}>\r\n                  ...\r\n                </SearchDropdownRow>\r\n              </SearchDropdown>\r\n            )}\r\n          </AnimatePresence>\r\n        </AnimateSharedLayout>\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <SearchContainer ref={ref}>\r\n        <SearchInputContainer\r\n          onChange={(e) => onTextChange(e)}\r\n          placeholder=\"Search...\"\r\n          value={inputValue}\r\n          variants={searchInputVariants}\r\n          initial={clicked ? \"final\" : \"initial\"}\r\n          animate={clicked ? \"final\" : \"initial\"}\r\n        />\r\n        <SearchButtonContainer onClick={() => setClicked(!clicked)}>\r\n          <SearchIcon />\r\n        </SearchButtonContainer>\r\n        {renderSuggestionsList()}\r\n      </SearchContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  SHOP_DATA: selectCollectionForPreview,\r\n  data: selectCollectionNamesForSearch,\r\n});\r\nconst dispatchStateToProps = (dispatch) => ({\r\n  fetchCollectionStart: () => dispatch(fetchCollectionStart()),\r\n});\r\nexport default connect(mapStateToProps, dispatchStateToProps)(SearchUI);\r\n"]},"metadata":{},"sourceType":"module"}