{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\Github shit\\\\react-ecommerce\\\\client\\\\src\\\\Component\\\\Auth\\\\SignIn.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport Button from \"../Button/Button\";\nimport FormInput from \"../FormInput/FormInput\";\nimport { ContainerComponent, ButtonsComponent } from \"./Auth.styles\";\nimport { SignInWithGoogleStart, SignInWithWithEmailAndPasswordStart } from \"../Redux/User/UserAction\";\nconst intialState = {\n  email: \"\",\n  password: \"\"\n};\n\nconst SignIn = ({\n  SignInWithWithEmailAndPasswordStart,\n  SignInWithGoogleStart\n}) => {\n  _s();\n\n  const [userCredentials, setCredentials] = useState(intialState);\n  const {\n    email,\n    password\n  } = userCredentials;\n\n  const hundleSubmit = async e => {\n    e.preventDefault();\n    SignInWithWithEmailAndPasswordStart(email, password);\n  };\n\n  const hundleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setCredentials({ ...userCredentials,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(ContainerComponent, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"I have an account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Sign in with your e-mail and password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: () => hundleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"email\",\n        id: \"email\",\n        name: \"email\",\n        label: \"Email:\",\n        value: email,\n        handleChange: hundleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"password\",\n        id: \"password\",\n        name: \"password\",\n        label: \"Password:\",\n        value: password,\n        handleChange: hundleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ButtonsComponent, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: \"SignIn\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"button\",\n          onClick: SignInWithGoogleStart,\n          signInWithGoogle: true,\n          children: \"SignIn with Google\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 7\n  }, this);\n};\n\n_s(SignIn, \"WppJ9+iRzJ6Q6jm4/92XRk4Qtu8=\");\n\n_c = SignIn;\n\nconst mapDispatchToProps = dispatch => ({\n  SignInWithGoogleStart: () => dispatch(SignInWithGoogleStart()),\n  SignInWithWithEmailAndPasswordStart: (email, password) => dispatch(SignInWithWithEmailAndPasswordStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);\n\nvar _c;\n\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"sources":["D:/Github shit/react-ecommerce/client/src/Component/Auth/SignIn.js"],"names":["React","useState","connect","Button","FormInput","ContainerComponent","ButtonsComponent","SignInWithGoogleStart","SignInWithWithEmailAndPasswordStart","intialState","email","password","SignIn","userCredentials","setCredentials","hundleSubmit","e","preventDefault","hundleChange","name","value","target","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React,{useState} from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Button from \"../Button/Button\";\r\nimport FormInput from \"../FormInput/FormInput\";\r\nimport { ContainerComponent, ButtonsComponent } from \"./Auth.styles\";\r\nimport {\r\n  SignInWithGoogleStart,\r\n  SignInWithWithEmailAndPasswordStart,\r\n} from \"../Redux/User/UserAction\";\r\nconst intialState = {\r\n  email: \"\",\r\n  password: \"\",\r\n};\r\n\r\nconst SignIn = ({SignInWithWithEmailAndPasswordStart, SignInWithGoogleStart}) => {\r\n  const [userCredentials,setCredentials] = useState(intialState)\r\n  const { email, password } = userCredentials;\r\n  const  hundleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    SignInWithWithEmailAndPasswordStart(email, password);\r\n  };\r\n  const hundleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setCredentials({ ...userCredentials, [name]: value });\r\n  };\r\n    return (\r\n      <ContainerComponent>\r\n        <h2>I have an account</h2>\r\n        <span>Sign in with your e-mail and password</span>\r\n        <form onSubmit={() => hundleSubmit}>\r\n          <FormInput\r\n            type=\"email\"\r\n            id=\"email\"\r\n            name=\"email\"\r\n            label=\"Email:\"\r\n            value={email}\r\n            handleChange={hundleChange}\r\n            required\r\n          />\r\n          <FormInput\r\n            type=\"password\"\r\n            id=\"password\"\r\n            name=\"password\"\r\n            label=\"Password:\"\r\n            value={password}\r\n            handleChange={hundleChange}\r\n            required\r\n          />\r\n          <ButtonsComponent>\r\n            <Button type=\"submit\">SignIn</Button>\r\n            <Button\r\n              type=\"button\"\r\n              onClick={SignInWithGoogleStart}\r\n              signInWithGoogle\r\n            >\r\n              SignIn with Google\r\n            </Button>\r\n          </ButtonsComponent>\r\n        </form>\r\n      </ContainerComponent>\r\n    );\r\n  }\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  SignInWithGoogleStart: () => dispatch(SignInWithGoogleStart()),\r\n  SignInWithWithEmailAndPasswordStart: (email, password) =>\r\n    dispatch(SignInWithWithEmailAndPasswordStart({ email, password })),\r\n});\r\nexport default connect(null, mapDispatchToProps)(SignIn);\r\n"]},"metadata":{},"sourceType":"module"}