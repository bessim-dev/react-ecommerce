{"ast":null,"code":"import { takeLatest, put, all, call } from \"redux-saga/effects\";\nimport UserTypes from \"./UserTypes\";\nimport { googleProvider, auth, createUserProfileDocument, getCurrentUser } from \"../../FireBase/FireBase\";\nimport { SignInSucess, SignInFailure, SignOutFailure, SignOutSuccess, SignUpFailure, SignUpSuccess } from \"./UserAction\";\n\nfunction* getUserSnapshot(user) {\n  try {\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(SignInSucess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (e) {\n    yield put(SignInFailure(e));\n  }\n}\n\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getUserSnapshot(user);\n  } catch (e) {\n    yield put(SignInFailure(e));\n  }\n}\nexport function* onSignInWithGoogleStart() {\n  yield takeLatest(UserTypes.SIGN_IN_WITH_GOOGLE_START, signInWithGoogle);\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getUserSnapshot(user);\n  } catch (e) {\n    yield put(SignInFailure(e));\n  }\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getUserSnapshot(userAuth);\n  } catch (e) {\n    yield put(SignInFailure(e));\n  }\n}\nexport function* SignOut() {\n  try {\n    yield auth.signOut;\n    yield put(SignOutSuccess());\n  } catch (e) {\n    yield put(SignOutFailure(e));\n  }\n}\nexport function* SignUp({\n  payload: {\n    name,\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.createUserWithEmailAndPassword(email, password);\n    yield put(SignUpSuccess({\n      user,\n      additionalData: {\n        name\n      }\n    }));\n  } catch (e) {\n    yield put(SignUpFailure(e));\n  }\n}\nexport function* signInAfterSignUp({\n  payload: {\n    user,\n    additionalData\n  }\n}) {\n  yield getUserSnapshot(user, additionalData);\n}\nexport function* onSignInWithEmailStart() {\n  yield takeLatest(UserTypes.SIGN_IN_WITH_USERANDPASSWORD_START, signInWithEmail);\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(UserTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* onSignOutStart() {\n  yield takeLatest(UserTypes.SIGN_OUT_START, SignOut);\n}\nexport function* onSignUpStart() {\n  yield takeLatest(UserTypes.SIGN_UP_START, SignUp);\n}\nexport function* onSignUpSuccess() {\n  yield takeLatest(UserTypes.SIGN_UP_SUCCESS, signInAfterSignUp);\n}\nexport function* userSaga() {\n  yield all([call(onSignInWithGoogleStart), call(onSignInWithEmailStart), call(onCheckUserSession), call(onSignOutStart), call(onSignUpStart), call(onSignUpSuccess)]);\n}","map":{"version":3,"sources":["D:/Github shit/react-ecommerce/src/Component/Redux/User/UserSaga.js"],"names":["takeLatest","put","all","call","UserTypes","googleProvider","auth","createUserProfileDocument","getCurrentUser","SignInSucess","SignInFailure","SignOutFailure","SignOutSuccess","SignUpFailure","SignUpSuccess","getUserSnapshot","user","userRef","userSnapshot","get","id","data","e","signInWithGoogle","signInWithPopup","onSignInWithGoogleStart","SIGN_IN_WITH_GOOGLE_START","signInWithEmail","payload","email","password","signInWithEmailAndPassword","isUserAuthenticated","userAuth","SignOut","signOut","SignUp","name","createUserWithEmailAndPassword","additionalData","signInAfterSignUp","onSignInWithEmailStart","SIGN_IN_WITH_USERANDPASSWORD_START","onCheckUserSession","CHECK_USER_SESSION","onSignOutStart","SIGN_OUT_START","onSignUpStart","SIGN_UP_START","onSignUpSuccess","SIGN_UP_SUCCESS","userSaga"],"mappings":"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","sourcesContent":["import { takeLatest, put, all, call } from \"redux-saga/effects\";\r\nimport UserTypes from \"./UserTypes\";\r\nimport {\r\n  googleProvider,\r\n  auth,\r\n  createUserProfileDocument,\r\n  getCurrentUser,\r\n} from \"../../FireBase/FireBase\";\r\nimport {\r\n  SignInSucess,\r\n  SignInFailure,\r\n  SignOutFailure,\r\n  SignOutSuccess,\r\n  SignUpFailure,\r\n  SignUpSuccess,\r\n} from \"./UserAction\";\r\nfunction* getUserSnapshot(user) {\r\n  try {\r\n    const userRef = yield call(createUserProfileDocument, user);\r\n    const userSnapshot = yield userRef.get();\r\n    yield put(SignInSucess({ id: userSnapshot.id, ...userSnapshot.data() }));\r\n  } catch (e) {\r\n    yield put(SignInFailure(e));\r\n  }\r\n}\r\nexport function* signInWithGoogle() {\r\n  try {\r\n    const { user } = yield auth.signInWithPopup(googleProvider);\r\n    yield getUserSnapshot(user);\r\n  } catch (e) {\r\n    yield put(SignInFailure(e));\r\n  }\r\n}\r\nexport function* onSignInWithGoogleStart() {\r\n  yield takeLatest(UserTypes.SIGN_IN_WITH_GOOGLE_START, signInWithGoogle);\r\n}\r\nexport function* signInWithEmail({ payload: { email, password } }) {\r\n  try {\r\n    const { user } = yield auth.signInWithEmailAndPassword(email, password);\r\n    yield getUserSnapshot(user);\r\n  } catch (e) {\r\n    yield put(SignInFailure(e));\r\n  }\r\n}\r\nexport function* isUserAuthenticated() {\r\n  try {\r\n    const userAuth = yield getCurrentUser();\r\n    if (!userAuth) return;\r\n    yield getUserSnapshot(userAuth);\r\n  } catch (e) {\r\n    yield put(SignInFailure(e));\r\n  }\r\n}\r\nexport function* SignOut() {\r\n  try {\r\n    yield auth.signOut;\r\n    yield put(SignOutSuccess());\r\n  } catch (e) {\r\n    yield put(SignOutFailure(e));\r\n  }\r\n}\r\nexport function* SignUp({ payload: { name, email, password} }) {\r\n  try {\r\n    const {user} = yield auth.createUserWithEmailAndPassword(email, password);\r\n    yield put(SignUpSuccess({user,additionalData:{name}}));\r\n  } catch (e) {\r\n    yield put(SignUpFailure(e))\r\n  }\r\n}\r\nexport function* signInAfterSignUp({payload:{user,additionalData}}){\r\n  yield getUserSnapshot(user,additionalData)\r\n}\r\nexport function* onSignInWithEmailStart() {\r\n  yield takeLatest(\r\n    UserTypes.SIGN_IN_WITH_USERANDPASSWORD_START,\r\n    signInWithEmail\r\n  );\r\n}\r\nexport function* onCheckUserSession() {\r\n  yield takeLatest(UserTypes.CHECK_USER_SESSION, isUserAuthenticated);\r\n}\r\nexport function* onSignOutStart() {\r\n  yield takeLatest(UserTypes.SIGN_OUT_START, SignOut);\r\n}\r\nexport function* onSignUpStart() {\r\n  yield takeLatest(UserTypes.SIGN_UP_START, SignUp);\r\n}\r\nexport function* onSignUpSuccess() {\r\n  yield takeLatest(UserTypes.SIGN_UP_SUCCESS, signInAfterSignUp)\r\n}\r\nexport function* userSaga() {\r\n  yield all([\r\n    call(onSignInWithGoogleStart),\r\n    call(onSignInWithEmailStart),\r\n    call(onCheckUserSession),\r\n    call(onSignOutStart),\r\n    call(onSignUpStart),\r\n    call(onSignUpSuccess),\r\n  ]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}