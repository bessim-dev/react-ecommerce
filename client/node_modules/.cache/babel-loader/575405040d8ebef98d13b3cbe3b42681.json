{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\Github shit\\\\react-ecommerce\\\\client\\\\src\\\\Component\\\\Search\\\\Search.UI.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from \"react\";\nimport { motion } from \"framer-motion\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { selectCollectionForPreview } from \"../Redux/shop/shopSelector\";\nimport { SearchContainer, SearchButtonContainer, SearchInputContainer, Icon } from \"./Search.style\";\nimport OutsideClickEvent from \"../OutsideClickEvent/OutsideClickEvent\";\nconst searchInputVariants = {\n  initial: {\n    width: \"0\",\n    display: \"none\"\n  },\n  final: {\n    width: \"200px\",\n    display: \"block\"\n  },\n  transition: {}\n};\nconst SearchContainerVariants = {\n  initial: {\n    width: \"50px\"\n  },\n  final: {\n    width: \"300px\"\n  }\n};\n\nconst SearchUI = ({\n  SHOP_DATA\n}) => {\n  _s();\n\n  const [suggestions, setSuggestions] = useState([]);\n\n  const onTextChange = e => {\n    let filtredList = [];\n    const value = e.target.value;\n    let data = [];\n\n    if (value.length > 0) {\n      if (SHOP_DATA) {\n        const regex = new RegExp(`^${value}`, \"i\");\n        SHOP_DATA.map(({\n          items,\n          routeName\n        }) => data.push(items.map(item => item.name)));\n        let result = [];\n\n        (function () {\n          for (let index = 0; index < data.length; index++) {\n            result = data[index].filter(v => regex.test(v) && v != 0).sort();\n\n            if (result.length > 0) {\n              filtredList.push(result);\n            }\n          }\n        })();\n      }\n    }\n\n    setSuggestions([...filtredList]);\n  };\n\n  const renderSuggestionsList = () => {\n    if (suggestions.length > 0) {\n      return /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: suggestions.map(suggestion => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: suggestion.name\n        }, Math.random(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this);\n    }\n\n    return null;\n  };\n\n  const [clicked, setClicked] = useState(false);\n  const ref = useRef();\n  OutsideClickEvent(ref, () => setClicked(false));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(SearchContainer, {\n      variants: SearchContainerVariants,\n      initial: clicked ? \"final\" : \"initial\",\n      animate: clicked ? \"final\" : \"initial\",\n      ref: ref,\n      children: [/*#__PURE__*/_jsxDEV(SearchInputContainer, {\n        onChange: e => onTextChange(e),\n        placeholder: \"Search...\",\n        variants: searchInputVariants,\n        initial: clicked ? \"final\" : \"initial\",\n        animate: clicked ? \"final\" : \"initial\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SearchButtonContainer, {\n        whileHover: {\n          scale: 0.8,\n          rotate: 360\n        },\n        onClick: () => setClicked(!clicked),\n        children: /*#__PURE__*/_jsxDEV(Icon, {\n          width: \"44\",\n          height: \"44\",\n          viewBox: \"0 0 44 44\",\n          children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n            cx: \"26.5\",\n            cy: \"17.5\",\n            r: \"14\",\n            stroke: \"black\",\n            strokeWidth: \"7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n            x1: \"16.7218\",\n            y1: \"27.9312\",\n            x2: \"2.7218\",\n            y2: \"40.9312\",\n            stroke: \"black\",\n            strokeWidth: \"8\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(SearchUI, \"j7sGe/E8SDYK60hdUVAeRlwmQCk=\");\n\n_c = SearchUI;\n{\n  renderSuggestionsList();\n}\nconst mapStateToProps = createStructuredSelector({\n  SHOP_DATA: selectCollectionForPreview\n});\nexport default connect(mapStateToProps)(SearchUI);\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchUI\");","map":{"version":3,"sources":["D:/Github shit/react-ecommerce/client/src/Component/Search/Search.UI.js"],"names":["React","useRef","useState","motion","connect","createStructuredSelector","selectCollectionForPreview","SearchContainer","SearchButtonContainer","SearchInputContainer","Icon","OutsideClickEvent","searchInputVariants","initial","width","display","final","transition","SearchContainerVariants","SearchUI","SHOP_DATA","suggestions","setSuggestions","onTextChange","e","filtredList","value","target","data","length","regex","RegExp","map","items","routeName","push","item","name","result","index","filter","v","test","sort","renderSuggestionsList","suggestion","Math","random","clicked","setClicked","ref","scale","rotate","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from \"react\";\r\nimport { motion } from \"framer-motion\";\r\nimport { connect } from \"react-redux\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport { selectCollectionForPreview } from \"../Redux/shop/shopSelector\";\r\n\r\nimport {\r\n  SearchContainer,\r\n  SearchButtonContainer,\r\n  SearchInputContainer,\r\n  Icon,\r\n} from \"./Search.style\";\r\nimport OutsideClickEvent from \"../OutsideClickEvent/OutsideClickEvent\";\r\nconst searchInputVariants = {\r\n  initial: { width: \"0\", display: \"none\" },\r\n  final: { width: \"200px\", display: \"block\" },\r\n  transition: {},\r\n};\r\nconst SearchContainerVariants = {\r\n  initial: { width: \"50px\" },\r\n  final: { width: \"300px\" },\r\n};\r\n\r\nconst SearchUI = ({ SHOP_DATA }) => {\r\n  const [suggestions, setSuggestions] = useState([]);\r\n  const onTextChange = (e) => {\r\n    let filtredList = [];\r\n    const value = e.target.value;\r\n    let data = [];\r\n    if (value.length > 0) {\r\n      if (SHOP_DATA) {\r\n        const regex = new RegExp(`^${value}`, \"i\");\r\n        SHOP_DATA.map(({ items, routeName }) =>\r\n          data.push(items.map((item) => item.name))\r\n        );\r\n        let result = [];\r\n        (function () {\r\n          for (let index = 0; index < data.length; index++) {\r\n            result = data[index].filter((v) => regex.test(v) && v != 0).sort();\r\n            if (result.length > 0) {\r\n              filtredList.push(result);\r\n            }\r\n          }\r\n        })();\r\n      }\r\n    }\r\n    setSuggestions([...filtredList]);\r\n  };\r\n  const renderSuggestionsList = () => {\r\n    if (suggestions.length > 0) {\r\n      return (\r\n        <ul>\r\n          {suggestions.map((suggestion) => (\r\n            <li key={Math.random()}>{suggestion.name}</li>\r\n          ))}\r\n        </ul>\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n\r\n  const [clicked, setClicked] = useState(false);\r\n  const ref = useRef();\r\n  OutsideClickEvent(ref, () => setClicked(false));\r\n  return (\r\n    <>\r\n      <SearchContainer\r\n        variants={SearchContainerVariants}\r\n        initial={clicked ? \"final\" : \"initial\"}\r\n        animate={clicked ? \"final\" : \"initial\"}\r\n        ref={ref}\r\n      >\r\n        <SearchInputContainer\r\n          onChange={(e) => onTextChange(e)}\r\n          placeholder=\"Search...\"\r\n          variants={searchInputVariants}\r\n          initial={clicked ? \"final\" : \"initial\"}\r\n          animate={clicked ? \"final\" : \"initial\"}\r\n        />\r\n        <SearchButtonContainer\r\n          whileHover={{ scale: 0.8, rotate: 360 }}\r\n          onClick={() => setClicked(!clicked)}\r\n        >\r\n          <Icon width=\"44\" height=\"44\" viewBox=\"0 0 44 44\">\r\n            <circle cx=\"26.5\" cy=\"17.5\" r=\"14\" stroke=\"black\" strokeWidth=\"7\" />\r\n            <line\r\n              x1=\"16.7218\"\r\n              y1=\"27.9312\"\r\n              x2=\"2.7218\"\r\n              y2=\"40.9312\"\r\n              stroke=\"black\"\r\n              strokeWidth=\"8\"\r\n            />\r\n          </Icon>\r\n        </SearchButtonContainer>\r\n      </SearchContainer>\r\n    </>\r\n  );\r\n};\r\n{\r\n  renderSuggestionsList();\r\n}\r\nconst mapStateToProps = createStructuredSelector({\r\n  SHOP_DATA: selectCollectionForPreview,\r\n});\r\nexport default connect(mapStateToProps)(SearchUI);\r\n"]},"metadata":{},"sourceType":"module"}