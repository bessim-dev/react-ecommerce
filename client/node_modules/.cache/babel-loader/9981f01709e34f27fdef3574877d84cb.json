{"ast":null,"code":"var _jsxFileName = \"D:\\\\Github shit\\\\react-ecommerce\\\\src\\\\Component\\\\Auth\\\\Register.js\";\nimport React, { useState } from \"react\";\nimport Button from \"../Button/Button\";\nimport FormInput from \"../FormInput/FormInput\";\nimport { ContainerComponent } from \"./Auth.styles\";\nimport { connect } from 'react-redux';\nimport { SignUpStart } from \"../Redux/User/UserAction\";\nconst initialState = {\n  name: \"\",\n  last_name: \"\",\n  email: \"\",\n  password: \"\",\n  passwordC: \"\"\n};\n\nconst Register = ({\n  signUpStart\n}) => {\n  const [userCredentials, setCredentials] = useState(initialState);\n  const {\n    name,\n    email,\n    password,\n    passwordC,\n    last_name\n  } = userCredentials;\n\n  const hundleSubmit = async e => {\n    e.preventDefault();\n\n    if (password !== passwordC) {\n      alert(\"password does not match\");\n      return;\n    }\n\n    signUpStart(userCredentials);\n  };\n\n  const hundleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setCredentials({ ...userCredentials,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(ContainerComponent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, \"I don't have an account\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, \"Register Now!\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: () => hundleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    type: \"text\",\n    id: \"name\",\n    name: \"name\",\n    label: \"Name:\",\n    value: name,\n    handleChange: hundleChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"text\",\n    id: \"last_name\",\n    name: \"last_name\",\n    label: \"Last Name:\",\n    value: last_name,\n    handleChange: hundleChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"email\",\n    id: \"email\",\n    name: \"email\",\n    label: \"Email:\",\n    value: email,\n    handleChange: hundleChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"password\",\n    id: \"password\",\n    name: \"password\",\n    label: \"Password:\",\n    value: password,\n    handleChange: hundleChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"password\",\n    id: \"passwordC\",\n    name: \"passwordC\",\n    label: \"Confirm Password:\",\n    value: passwordC,\n    handleChange: hundleChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    onClick: hundleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, \"Register\")));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: credentials => dispatch(SignUpStart(credentials))\n});\n\nexport default connect(null, mapDispatchToProps)(Register);","map":{"version":3,"sources":["D:/Github shit/react-ecommerce/src/Component/Auth/Register.js"],"names":["React","useState","Button","FormInput","ContainerComponent","connect","SignUpStart","initialState","name","last_name","email","password","passwordC","Register","signUpStart","userCredentials","setCredentials","hundleSubmit","e","preventDefault","alert","hundleChange","value","target","mapDispatchToProps","dispatch","credentials"],"mappings":"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","sourcesContent":["import React,{useState} from \"react\";\r\nimport Button from \"../Button/Button\";\r\nimport FormInput from \"../FormInput/FormInput\";\r\nimport { ContainerComponent } from \"./Auth.styles\";\r\nimport {connect} from 'react-redux';\r\nimport { SignUpStart } from \"../Redux/User/UserAction\";\r\nconst initialState = {\r\n  name: \"\",\r\n  last_name: \"\",\r\n  email: \"\",\r\n  password: \"\",\r\n  passwordC: \"\",\r\n};\r\nconst Register = ({signUpStart}) => {\r\n  const [userCredentials, setCredentials] = useState(initialState)\r\n  const { name, email, password, passwordC, last_name } = userCredentials;\r\n  const hundleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (password !== passwordC) {\r\n      alert(\"password does not match\");\r\n      return;\r\n    } \r\n    signUpStart(userCredentials)\r\n  };\r\n  const hundleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setCredentials({ ...userCredentials, [name]: value });\r\n  };\r\n    return (\r\n      <ContainerComponent>\r\n        <h2>I don't have an account</h2>\r\n        <span>Register Now!</span>\r\n        <form onSubmit={() => hundleSubmit}>\r\n          <FormInput\r\n            type=\"text\"\r\n            id=\"name\"\r\n            name=\"name\"\r\n            label=\"Name:\"\r\n            value={name}\r\n            handleChange={hundleChange}\r\n            required\r\n          />\r\n          <FormInput\r\n            type=\"text\"\r\n            id=\"last_name\"\r\n            name=\"last_name\"\r\n            label=\"Last Name:\"\r\n            value={last_name}\r\n            handleChange={hundleChange}\r\n            required\r\n          />\r\n          <FormInput\r\n            type=\"email\"\r\n            id=\"email\"\r\n            name=\"email\"\r\n            label=\"Email:\"\r\n            value={email}\r\n            handleChange={hundleChange}\r\n            required\r\n          />\r\n          <FormInput\r\n            type=\"password\"\r\n            id=\"password\"\r\n            name=\"password\"\r\n            label=\"Password:\"\r\n            value={password}\r\n            handleChange={hundleChange}\r\n            required\r\n          />\r\n          <FormInput\r\n            type=\"password\"\r\n            id=\"passwordC\"\r\n            name=\"passwordC\"\r\n            label=\"Confirm Password:\"\r\n            value={passwordC}\r\n            handleChange={hundleChange}\r\n            required\r\n          />\r\n          <Button type=\"submit\" onClick={hundleSubmit}>Register</Button>\r\n        </form>\r\n      </ContainerComponent>\r\n    );\r\n  }\r\nconst mapDispatchToProps = dispatch => ({\r\n  signUpStart : (credentials) => dispatch(SignUpStart(credentials))\r\n})\r\nexport default connect(null,mapDispatchToProps)(Register);\r\n"]},"metadata":{},"sourceType":"module"}